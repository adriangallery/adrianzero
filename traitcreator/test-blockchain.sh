#!/bin/bash

echo "üîó TraitCreator - Blockchain Testing"
echo "===================================="

# Check if server is running
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Servidor corriendo en http://localhost:3000"
    echo ""
    
    # Check for blockchain components
    if curl -s http://localhost:3000 | grep -q "WALLET CONNECTED\|CONNECT WALLET"; then
        echo "‚úÖ Componentes de wallet detectados"
    else
        echo "‚ùå Componentes de wallet no encontrados"
    fi
    
    # Check for blockchain info
    if curl -s http://localhost:3000 | grep -q "SAVE & MINT"; then
        echo "‚úÖ Componentes de minting detectados"
    else
        echo "‚ùå Componentes de minting no encontrados"
    fi
    
    # Check for contract files
    if [ -f "contracts/AdrianSimpleSave.json" ]; then
        echo "‚úÖ ABI AdrianSimpleSave encontrado"
        echo "   Tama√±o: $(ls -lh contracts/AdrianSimpleSave.json | awk '{print $5}')"
    else
        echo "‚ùå ABI AdrianSimpleSave no encontrado"
    fi
    
    if [ -f "contracts/AdrianToken.json" ]; then
        echo "‚úÖ ABI AdrianToken encontrado"
        echo "   Tama√±o: $(ls -lh contracts/AdrianToken.json | awk '{print $5}')"
    else
        echo "‚ùå ABI AdrianToken no encontrado"
    fi
    
    echo ""
    echo "üåê Abriendo en el navegador..."
    
    # Open in default browser
    if command -v open &> /dev/null; then
        open http://localhost:3000
    elif command -v xdg-open &> /dev/null; then
        xdg-open http://localhost:3000
    else
        echo "üì± Abre manualmente: http://localhost:3000"
    fi
    
    echo ""
    echo "üîó Funcionalidades Blockchain Implementadas:"
    echo "   ‚Ä¢ Conexi√≥n de wallet con MetaMask"
    echo "   ‚Ä¢ Lectura de balance de $ADRIAN tokens"
    echo "   ‚Ä¢ Lectura de allowance para el contrato"
    echo "   ‚Ä¢ Lectura del precio de save desde el contrato"
    echo "   ‚Ä¢ Aprobaci√≥n de tokens para el contrato"
    echo "   ‚Ä¢ Funci√≥n payForSave() para guardar y mintear"
    echo "   ‚Ä¢ Manejo de eventos SavePaid y TokenMinted"
    echo "   ‚Ä¢ Interfaz responsive para mobile y desktop"
    echo ""
    echo "üõ†Ô∏è Para probar:"
    echo "   1. Abre http://localhost:3000"
    echo "   2. Conecta tu wallet (MetaMask)"
    echo "   3. Verifica que se muestre tu balance"
    echo "   4. Dibuja un dise√±o en el canvas"
    echo "   5. Prueba 'SAVE ONLY' (gratis)"
    echo "   6. Prueba 'SAVE & MINT' (requiere $ADRIAN)"
    echo "   7. Verifica la aprobaci√≥n de tokens"
    echo ""
    echo "üí° Caracter√≠sticas del contrato:"
    echo "   ‚Ä¢ CA: 0x8e439e92f3a884716b39294248b0a47f645f0854"
    echo "   ‚Ä¢ Token: 0x7E99075Ce287F1cF8cBCAaa6A1C7894e404fD7Ea ($ADRIAN)"
    echo "   ‚Ä¢ Precio: 2 $ADRIAN por save"
    echo "   ‚Ä¢ Mint autom√°tico al pagar"
    echo "   ‚Ä¢ Network: Ethereum Mainnet"
    echo ""
    echo "üì± Para probar en m√≥vil:"
    echo "   http://192.168.0.15:3000"
    
else
    echo "‚ùå Servidor no est√° corriendo"
    echo ""
    echo "üöÄ Para iniciar el servidor:"
    echo "   npm run dev"
    echo ""
    echo "üì± Luego abre: http://localhost:3000"
fi

echo ""
echo "üéâ ¬°Disfruta del TraitCreator con blockchain!" 